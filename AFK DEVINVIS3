wait(0.5)
local ba = Instance.new("ScreenGui")
local ca = Instance.new("TextLabel")
local da = Instance.new("Frame")
local ab = Instance.new("TextLabel")
local uptimeLabel = Instance.new("TextLabel")
local toggleButton = Instance.new("TextButton")
local menuOpen = false
local afkEnabled = true
local keybind = Enum.KeyCode.F

local startTime = tick()  
local secondsPassed = 0
local minutesPassed = 0
local hoursPassed = 0
local daysPassed = 0

ba.Parent = game.CoreGui
ba.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

ca.Parent = ba
ca.Active = true
ca.BackgroundColor3 = Color3.new(0, 0, 0)
ca.Draggable = true
ca.Position = UDim2.new(0.698610067, 0, 0.098096624, 0)
ca.Size = UDim2.new(0, 370, 0, 52)
ca.Font = Enum.Font.SourceSansSemibold
ca.Text = "Anti AFK"
ca.TextColor3 = Color3.new(1, 1, 1)
ca.TextSize = 22

local caCorner = Instance.new("UICorner")
caCorner.Parent = ca
caCorner.CornerRadius = UDim.new(0, 12)

local gradient = Instance.new("UIGradient")
gradient.Parent = ca
gradient.Color = ColorSequence.new(
    Color3.fromRGB(0, 0, 0), 
    Color3.fromRGB(50, 50, 50)
)
gradient.Rotation = 45

da.Parent = ca
da.BackgroundColor3 = Color3.new(0, 0, 0)
da.Position = UDim2.new(0, 0, 1.0192306, 0)
da.Size = UDim2.new(0, 370, 0, 160)

local daCorner = Instance.new("UICorner")
daCorner.Parent = da
daCorner.CornerRadius = UDim.new(0, 12)

ab.Parent = da
ab.BackgroundColor3 = Color3.new(0, 0, 0)
ab.Position = UDim2.new(0, 0, 0.158377, 0)
ab.Size = UDim2.new(0, 370, 0, 44)
ab.Font = Enum.Font.ArialBold
ab.Text = "Status: Active"
ab.TextColor3 = Color3.new(1, 1, 1)
ab.TextSize = 20

uptimeLabel.Parent = da
uptimeLabel.BackgroundColor3 = Color3.new(0, 0, 0)
uptimeLabel.Position = UDim2.new(0, 0, 0.500, 0)
uptimeLabel.Size = UDim2.new(0, 370, 0, 21)
uptimeLabel.Font = Enum.Font.Arial
uptimeLabel.Text = "Uptime: 0d 0h 0m 0s"
uptimeLabel.TextColor3 = Color3.new(1, 1, 1)
uptimeLabel.TextSize = 20

toggleButton.Parent = da
toggleButton.BackgroundColor3 = Color3.new(0, 0, 0)
toggleButton.Position = UDim2.new(0, 0, 0.75, 0)
toggleButton.Size = UDim2.new(0, 370, 0, 30)
toggleButton.Font = Enum.Font.SourceSans
toggleButton.Text = "Toggle AFK: ON"
toggleButton.TextColor3 = Color3.new(1, 1, 1)
toggleButton.TextSize = 20

local toggleButtonCorner = Instance.new("UICorner")
toggleButtonCorner.Parent = toggleButton
toggleButtonCorner.CornerRadius = UDim.new(0, 12)

toggleButton.MouseButton1Click:Connect(function()
    afkEnabled = not afkEnabled
    if afkEnabled then
        toggleButton.Text = "Toggle AFK: ON"
        ab.Text = "Status: Active"
    else
        toggleButton.Text = "Toggle AFK: OFF"
        ab.Text = "Status: Inactive"
    end
end)

local UIS = game:GetService("UserInputService")
UIS.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end

    if input.KeyCode == keybind then
        menuOpen = not menuOpen
        ca.Visible = menuOpen
    end
end)

function setKeybind(newKey)
    keybind = newKey
end

local keybindButton = Instance.new("TextButton")
keybindButton.Parent = da
keybindButton.BackgroundColor3 = Color3.new(0, 0, 0)
keybindButton.Position = UDim2.new(0, 0, 1.0, 0)
keybindButton.Size = UDim2.new(0, 370, 0, 30)
keybindButton.Font = Enum.Font.SourceSans
keybindButton.Text = "Set Keybind"
keybindButton.TextColor3 = Color3.new(1, 1, 1)
keybindButton.TextSize = 20

keybindButton.MouseButton1Click:Connect(function()
    keybindButton.Text = "Press any key to set keybind..."
    
    UIS.InputBegan:Connect(function(input, gameProcessed)
        if gameProcessed then return end
        keybind = input.KeyCode
        keybindButton.Text = "Keybind Set to: " .. input.KeyCode.Name
    end)
end)

spawn(function()
    while true do
        wait(1)
        secondsPassed = secondsPassed + 1

        if secondsPassed >= 60 then
            secondsPassed = 0
            minutesPassed = minutesPassed + 1
        end

        if minutesPassed >= 60 then
            minutesPassed = 0
            hoursPassed = hoursPassed + 1
        end

        if hoursPassed >= 24 then
            hoursPassed = 0
            daysPassed = daysPassed + 1
        end

        uptimeLabel.Text = string.format("Uptime: %dd %dh %dm %ds", daysPassed, hoursPassed, minutesPassed, secondsPassed)
    end
end)

local bb = game:service'VirtualUser'
game:service'Players'.LocalPlayer.Idled:connect(function()
    if afkEnabled then
        bb:CaptureController()
        bb:ClickButton2(Vector2.new())
        ab.Text = "Roblox tried kicking you but I didn't let them!"
        wait(2)
        ab.Text = "Status: Active"
    end
end)

local creditLabel = Instance.new("TextLabel")
creditLabel.Parent = da
creditLabel.BackgroundColor3 = Color3.new(0, 0, 0)
creditLabel.Position = UDim2.new(0, 0, 1.1, 0)
creditLabel.Size = UDim2.new(0, 370, 0, 21)
creditLabel.Font = Enum.Font.Arial
creditLabel.Text = "Creator's Discord: happy.z"
creditLabel.TextColor3 = Color3.new(1, 1, 1)
creditLabel.TextSize = 20

local creditCorner = Instance.new("UICorner")
creditCorner.Parent = creditLabel
creditCorner.CornerRadius = UDim.new(0, 10)
